trigger:
  branches:
    include:
    - main

name: $(date:yyyyMMdd)$(rev:.r)
resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/main

stages:
- stage: Build
  jobs:
  - job: Build
    variables:
    - name: BuildParameters.RestoreBuildProjects
      value: '**/*.csproj'
    - name: BuildParameters.TestProjects
      value: '**/*[Tt]ests/*.csproj'
    - group: yaml-config

    displayName: Build Job
    pool:
      name: Azure Pipelines
    steps:
    - checkout: self
      clean: true
      fetchTags: false
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: $(BuildParameters.RestoreBuildProjects)
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: $(BuildParameters.RestoreBuildProjects)
        arguments: --configuration $(BuildConfiguration)
    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: $(BuildParameters.TestProjects)
        arguments: --configuration $(BuildConfiguration)
    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: publish
        publishWebProjects: True
        projects: $(BuildParameters.RestoreBuildProjects)
        arguments: --configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)
        zipAfterPublish: True
    - task: PublishBuildArtifacts@1
      displayName: Publish Artifact
      condition: succeededOrFailed()
      inputs:
        PathtoPublish: $(build.artifactstagingdirectory)
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  jobs:
  - job: Deploy
    pool:
      name: Azure Pipelines
    steps:
    - task: DownloadBuildArtifacts@1
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Principal connection'
        appType: 'apiApp'
        WebAppName: 'vn-trainging-ttt-apiapp'
        deployToSlotOrASE: true
        ResourceGroupName: 'vn-training-ttt'
        SlotName: 'Staging'
        packageForLinux: '$(System.ArtifactsDirectory)/**/*.zip'

